{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAU3CF,EAAQM,iBAAiB,SARR,SAASC,GAEbH,EAAUI,MACJL,EAAWK,MAE9B,OADeH,EAAYG,K,IAK3BR,EAAQM,iBAAiB,UAezB,SAAsBC,G,kBAYR,IAAME,EAAWC,EACXC,EAAYC,OAAOC,EAAML,OAASI,QAAQF,EAAI,GAAGI,EAAKN,QA1B1E,SAAuBC,EAAUI,GAC/B,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEP,WAAUI,UAEpBI,EAAO,CAAER,WAAUI,S,GAEpBA,E,KAkBOS,CAAcb,EAAUE,GACvBY,MAAK,SAACb,EAAGG,GACRW,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAgBkB,OAAVhB,EAAU,M,IAE3EiB,OAAM,SAAClB,EAAGG,GACTW,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAflB,EAAS,QAAgBkB,OAAVhB,EAAU,M,KAlBrFJ,EAAMuB,iBACN,IACEC,EAAAxB,EAAMyB,cAAcC,SADdpB,EACNkB,EADMlB,MAAOC,EACbiB,EADajB,KAAMoB,EACnBH,EADmBG,OAGrB,GADAC,QAAQC,IAAI,eAAgBvB,EAAML,MAAO,UAAWM,EAAKN,MAAO,YAAa0B,EAAO1B,OAChFM,EAAKN,MAAQ,GAAKK,EAAML,MAAQ,GAAK0B,EAAO1B,MAAQ,EAErD,YADA6B,EAAAZ,OAAOI,QAAQ,sCAKR,IAAK,IAAIS,EAAI,EAAGA,GAAKJ,EAAO1B,MAAO8B,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst ourForm = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]')\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nconst readForm = function(event) {\n  \nconst step = delayStep.value;\nconst firstDelay = inputDelay.value;\nconst amount = inputAmount.value;\nreturn (firstDelay, step, amount); \n};\n\nourForm.addEventListener(\"input\", readForm);\nourForm.addEventListener(\"submit\", handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount }\n  = event.currentTarget.elements;\n  console.log(\"firstDelay= \", delay.value, \"step = \", step.value, \"amount = \", amount.value) ;\n  if (step.value < 0 || delay.value < 0 || amount.value < 0)  {\n     Notify.failure(\"Please fill > 0 in all the fields!\");\n     return;\n  }\n      \n\n            for (let i = 1; i <= amount.value; i++) {\n              const position = i;\n              const delayStep = Number(delay.value) + Number((i - 1)*step.value);\n              createPromise(position, delayStep)\n              .then((i, delay) => {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayStep}ms`);\n              })\n              .catch((i, delay) => {\n                Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayStep}ms`);\n              }); \n              \n\n              }\n              \n            }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$ourForm","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","value","position","i","delayStep1","Number","delay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","_elements","currentTarget","elements","amount","console","log","$h6c0i","i1","_loop"],"version":3,"file":"03-promises.a877985f.js.map"}