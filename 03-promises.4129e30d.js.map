{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAa3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbR,EAAQgB,iBAAiB,SARR,SAASC,GAEbb,EAAUc,MACJf,EAAWe,MAE9B,OADeb,EAAYa,K,IAK3BlB,EAAQgB,iBAAiB,UAezB,SAAsBC,GACpBA,EAAME,iBACN,MAAMX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,GACnBJ,EAAMK,cAAcC,SAEtB,GADAC,QAAQC,IAAI,eAAgBjB,EAAMU,MAAO,UAAWE,EAAKF,MAAO,YAAaG,EAAOH,OACjE,KAAfE,EAAKF,OAAgC,KAAhBV,EAAMU,OAAiC,KAAjBG,EAAOH,MACnD,OAAOQ,MAAM,kCAIN,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAOH,MAAOS,IAAK,CACtC,IAAIC,EAAWD,EACf,MAAME,EAAYC,OAAOtB,EAAMU,OAASY,QAAQH,EAAI,GAAGP,EAAKF,OAC5DZ,EAAcsB,EAAUC,GACvBE,MAAK,CAACxB,EAAUC,KACfwB,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAqB3B,QAAiBsB,MAAc,IAE7EM,OAAM,CAAC5B,EAAUC,KAChBwB,EAAAlC,GAASmC,OAAOG,QAAQ,sBAAoB7B,QAAesB,MAAc,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst ourForm = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]')\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nconst readForm = function(event) {\n  \nconst step = delayStep.value;\nconst firstDelay = inputDelay.value;\nconst amount = inputAmount.value;\nreturn (firstDelay, step, amount); \n};\n\nourForm.addEventListener(\"input\", readForm);\nourForm.addEventListener(\"submit\", handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount }\n  = event.currentTarget.elements;\n  console.log(\"firstDelay= \", delay.value, \"step = \", step.value, \"amount = \", amount.value) ;\n  if (step.value === \"\" || delay.value === \"\" || amount.value === \"\") {\n     return alert(\"Please fill in all the fields!\");\n  }\n      \n\n            for (let i = 1; i <= amount.value; i++) {\n              let position = i;\n              const delayStep = Number(delay.value) + Number((i - 1)*step.value);\n              createPromise(position, delayStep)\n              .then((position, delay) => {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayStep}ms`);\n              })\n              .catch((position, delay) => {\n                Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayStep}ms`);\n              }); \n              \n\n              }\n              \n            }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$ourForm","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","value","preventDefault","step","amount","currentTarget","elements","console","log","alert","i","position1","delayStep1","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.4129e30d.js.map"}